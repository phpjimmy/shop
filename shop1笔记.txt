ThinkPHP框架原理：

ThinkPHP一款基于MVC架构的PHP开发框架
MVC架构是基于OOP的一种代码管理结构，数据层、控制器层、视图层三层分开，结构清晰。
因为web页面都是一个个独立的，每一个页面单独执行一个页面的代码，PHP页面与页面之间只有链接跳转的联系。
而TP或者类似的框架都是一个单入口文件，进入任何文件和执行任何操作都必须从单一入口进入。

比如，把index.php作为网站的入口文件，index.php就好像成为了整个网站应用的大容器，这个大容器进进出出的就是MVC的三层php页面。
也就是说，现在按照不同的功能模块把PHP划分成三种类型的php文件，进什么文件，输出什么文件都是index.php通过URL控制实现的。
整个网站，在网址上看起来始终都是index.php带上不同参数的实现，但是不同的参数在变化的时候，index.php内部在不断的加载不同的控制器文件，
执行不同的数据处理，调用输出不同的页面模板，进而完成整个网站不同页面的变换。
所以，index.php没有跳转，但是每次执行都让index.php输出了不同的内容，进而实现整个网站的页面“跳转”。index.php成为了实现MVC代码架构的文件载体。

TP的路由是由URL实现

拓展：
面向对象的OOA、OOD、OOP

OOP是面向对象编程（Object Oriented Programming，OOP，面向对象程序设计）是一种计算机编程架构。
OOP 的一条基本原则是计算机程序是由单个能够起到子程序作用的单元或对象组合而成。
常说的OO五大原则就是指其中的 ：
1、单一职责原则；
2、开放闭合原则；
3、里氏替换原则；
4、依赖倒置原则；
5、接口隔离原则。

OOP的三大特性是什么？
封装 ：就是将一个类的使用和实现分开，只保留部分接口和方法与外部联系
继承：子类自动继承其父级类中的属性和方法，并可以添加新的属性和方法或者对部分属性和方法进行重写。继承增加了代码的可重用性。
多态：多个子类中虽然都具有同一个方法，但是这些子类实例化的对象调用这些相同的方法后却可以获得完全不同的结果，多态性增强了软件的灵活性

封装 － 也叫做信息封装：确保组件不会以不可预期的方式改变其它组件的内部状态；只有在那些提供了内部状态改变方法的组件中，才可以访问其内部状态。
         每类组件都提供了一个与其它组件联系的接口，并规定了其它组件进行调用的方法。
继承性 － 允许在现存的组件基础上创建子类组件，这统一并增强了多态性和封装性。典型地来说就是用类来对组件进行分组，而且还可以定义新类为现存的类的扩展，
       这样就可以将类组织成树形或网状结构，这体现了动作的通用性。
多态性 － 组件的引用和类集会涉及到其它许多不同类型的组件，而且引用组件所产生的结果得依据实际调用的类型。

